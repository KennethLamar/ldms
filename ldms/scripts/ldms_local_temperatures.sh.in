#!/bin/bash

# NOTE: replace the two vars below with your paths
# NOTE: change ports, intervals if you like
DESTDIR=
allowroot=0
prefix=@prefix@
exec_prefix=@exec_prefix@
libdir=@libdir@
BUILDDIR=@prefix@
# Manually redefine portbase to avoid collisions.
# Base should be above the maximum in :
#  cat /proc/sys/net/ipv4/ip_local_port_range
# and below 65530 or below the minimum and above 1024
portbase=61100
port1=`expr $portbase + 1`
port2=`expr $portbase + 2`
port3=`expr $portbase + 3`
if test ! -x $BUILDDIR/sbin/ldmsd; then
	echo "can't find ldmsd binary. set destdir in $0 before testing?"
	exit 1
fi
case "x$USER" in
	x)
	echo "must be run in user environment. USER not set"
	exit 1
	;;
	xroot)
	echo "must be run in user environment. root detected."
	echo "killing other folks ldmsd might be a bad idea"
	echo "change allowroot in $0 to override this check."
	exit 1
	;;
esac

# use our pid in dirname to prevent collisions in dir & file naming
TESTDIR=/tmp/$USER/ldmstest/$$
STOREDIR=$TESTDIR/store
SOCKDIR=$TESTDIR/run/ldmsd
LOGDIR=$TESTDIR/logs
export LDMSD_PIDFILE=$TESTDIR/run/ldmsd.pid
export LDMSD_SOCKPATH=${TESTDIR}/run
mkdir -p $STOREDIR $SOCKDIR $LOGDIR $LDMSD_SOCKPATH
echo "logs and data stored under $TESTDIR"

export LD_LIBRARY_PATH=${BUILDDIR}/lib:@libdir@:@pkglibdir@:@libeventpath@:$LD_LIBRARY_PATH
export LDMS_XPRT_LIBPATH=@pkglibdir@
export PATH=${BUILDDIR}/sbin:$PATH
export LDMSD_PLUGIN_LIBPATH=@pkglibdir@

CONFFILE=$SOCKDIR/procsensors.metrics.conf
rm -f $CONFFILE
case $HOSTNAME in
chama*) cat <<EOF>>$CONFFILE
# temperature only, to nearest degree C.
/sys/class/hwmon/hwmon1/device/temp1_input TC_physical_id_0 0.001 0
/sys/class/hwmon/hwmon1/device/temp2_input TC_core_0 0.001 0
/sys/class/hwmon/hwmon1/device/temp3_input TC_core_1 0.001 0
/sys/class/hwmon/hwmon1/device/temp4_input TC_core_2 0.001 0
/sys/class/hwmon/hwmon1/device/temp5_input TC_core_3 0.001 0
/sys/class/hwmon/hwmon1/device/temp6_input TC_core_4 0.001 0
/sys/class/hwmon/hwmon1/device/temp7_input TC_core_5 0.001 0
/sys/class/hwmon/hwmon1/device/temp8_input TC_core_6 0.001 0
/sys/class/hwmon/hwmon1/device/temp9_input TC_core_7 0.001 0
/sys/class/hwmon/hwmon2/device/temp1_input TC_physical_id_1 0.001 0
/sys/class/hwmon/hwmon2/device/temp2_input TC_core_8 0.001 0
/sys/class/hwmon/hwmon2/device/temp3_input TC_core_9 0.001 0
/sys/class/hwmon/hwmon2/device/temp4_input TC_core_10 0.001 0
/sys/class/hwmon/hwmon2/device/temp4_input TC_core_11 0.001 0
/sys/class/hwmon/hwmon2/device/temp4_input TC_core_12 0.001 0
/sys/class/hwmon/hwmon2/device/temp4_input TC_core_13 0.001 0
/sys/class/hwmon/hwmon2/device/temp4_input TC_core_14 0.001 0
/sys/class/hwmon/hwmon2/device/temp4_input TC_core_15 0.001 0
EOF
;;
*) cat <<EOF>>$CONFFILE
# temperature only, to nearest degree C for 1st 4 cores.
/sys/class/hwmon/hwmon1/device/temp1_input TC_physical_id_0 0.001 0
/sys/class/hwmon/hwmon1/device/temp2_input TC_core_0 0.001 0
/sys/class/hwmon/hwmon1/device/temp3_input TC_core_1 0.001 0
/sys/class/hwmon/hwmon1/device/temp4_input TC_core_2 0.001 0
/sys/class/hwmon/hwmon1/device/temp5_input TC_core_3 0.001 0
EOF
;;
esac
cat $CONFFILE
ls -l $CONFFILE

# whack the daemons we own
pkill ldmsd
sleep 1
echo "Listing ldmsd's still running:"
pgrep ldmsd
echo "Done."

echo removing old logs
rm -f ${LOGDIR}/1.txt
rm -f ${LOGDIR}/2.txt
rm -f ${LOGDIR}/3.txt

echo removing old output
rm -rf ${STOREDIR}/node
rm -f ${STOREDIR}/*

echo Starting daemons
ldmsd -x sock:$port1 -S $SOCKDIR/metric_socket_1  -l ${LOGDIR}/1.txt
ldmsd -x sock:$port2 -S $SOCKDIR/metric_socket_2  -l ${LOGDIR}/2.txt
ldmsd -x sock:$port3 -S $SOCKDIR/metric_socket_3  -l ${LOGDIR}/3.txt
sleep 1


echo Starting plugins on daemon1
echo "load name=procsensors" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
echo "config name=procsensors set=localhost1/procsensors component_id=1 conffile=$CONFFILE" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
echo "start name=procsensors interval=1000000 offset=0" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
sleep 1
sleep 1

echo Starting plugins on daemon2
echo "load name=procsensors" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_2
echo "config name=procsensors set=localhost2/procsensors component_id=2 conffile=$CONFFILE" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_2
echo "start name=procsensors interval=1000000 offset=0" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_2
sleep 2

echo Starting plugins on daemon3
echo "load name=procsensors" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
echo "config name=procsensors set=localhost3/procsensors component_id=3 conffile=$CONFFILE" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
echo "start name=procsensors interval=1000000 offset=0" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
sleep 2

echo Adding host2 to aggregator3
echo "add host=localhost type=active xprt=sock interval=1000000 offset=100000 port=$port2 sets=localhost2/procsensors" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
sleep 1
echo Adding host1 to aggregator3
echo "add host=localhost type=active xprt=sock interval=1000000 offset=200000 port=$port1 sets=localhost1/procsensors" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3

sleep 5
echo Adding store_csv to aggregator3
echo "load name=store_csv" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
sleep 2
echo "config name=store_csv path=${STOREDIR} altheader=0" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
echo "store name=store_csv comp_type=node set=procsensors container=procsensors" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
sleep 2
#

sleep 5
echo ldms_ls on host 1:
ldms_ls -h localhost -x sock -p $port1 -l
sleep 1
echo ldms_ls on host 2:
ldms_ls -h localhost -x sock -p $port2 -l
sleep 1
echo ldms_ls on host 3:
ldms_ls -h localhost -x sock -p $port3 

echo done;
