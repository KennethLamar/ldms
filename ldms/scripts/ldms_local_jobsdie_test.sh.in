#!/bin/bash
# script to test if jobstore reopens properly in distinct files.
# NOTE: replace the two vars below with your paths
# NOTE: change ports, intervals if you like
DESTDIR=
allowroot=0
prefix=@prefix@
exec_prefix=@exec_prefix@
libdir=@libdir@
BUILDDIR=@prefix@
# Manually redefine portbase to avoid collisions.
# Base should be above the maximum in :
#  cat /proc/sys/net/ipv4/ip_local_port_range
# and below 65530 or below the minimum and above 1024
portbase=61250
porttop=6125
port1=`expr $portbase + 1`
port2=`expr $portbase + 2`
port3=`expr $portbase + 3`
port4=`expr $portbase + 4`
if test ! -x $BUILDDIR/sbin/ldmsd; then
	echo "can't find ldmsd binary. set destdir in $0 before testing?"
	exit 1
fi
case "x$USER" in
	x)
	echo "must be run in user environment. USER not set"
	exit 1
	;;
	xroot)
	echo "must be run in user environment. root detected."
	echo "killing other folks ldmsd might be a bad idea"
	echo "change allowroot in $0 to override this check."
	exit 1
	;;
esac
function mysleep() {
	echo -n sleep $1 ... 
	sleep $1
	echo done
}

# use our pid in dirname to prevent collisions in dir & file naming
TESTDIR=/tmp/$USER/ldmstest/$$
STOREDIR=$TESTDIR/store
SPOOLDIR=$TESTDIR/spool
OPENHOOK=$TESTDIR/spool/openhook.sh
SPOOLER=$TESTDIR/spool/posthook.sh
SOCKDIR=$TESTDIR/run/ldmsd
SLURMFILE=$TESTDIR/run/ldms.slurm.jobid
SLURMCOL=slurm.jobid
LOGDIR=$TESTDIR/logs
export LDMSD_PIDFILE=$TESTDIR/run/ldmsd.pid
export TSAN_OPTIONS=verbosity=1:log_path=$LOGDIR:strip_path_prefix=$prefix
export ASAN_OPTIONS=verbosity=1:log_path=$LOGDIR:detect_stack_use_after_return=1:detect_leaks=1:strip_path_prefix=$prefix
export LDMSD_SOCKPATH=${TESTDIR}/run
mkdir -p $STOREDIR $SOCKDIR $LOGDIR $LDMSD_SOCKPATH $SPOOLDIR
echo "logs and data stored under $TESTDIR"

cat << EOF >> $OPENHOOK
#!/bin/sh
echo "\$* \`date\`" >> $SPOOLDIR/open-list
exit 0
EOF
chmod u+x $OPENHOOK

cat << EOF >> $SPOOLER
#!/bin/sh
echo "\$* \`date\`" >> $SPOOLDIR/post-list
exit 0
EOF
chmod u+x $SPOOLER
export LD_LIBRARY_PATH=${BUILDDIR}/lib:@libdir@:@pkglibdir@:@libeventpath@:$LD_LIBRARY_PATH
export LDMS_XPRT_LIBPATH=@pkglibdir@
export PATH=${BUILDDIR}/sbin:$PATH
export LDMSD_PLUGIN_LIBPATH=@pkglibdir@

# whack the daemons we own
pkill ldmsd
mysleep 1
echo "Listing ldmsd's still running:"
pgrep ldmsd
echo "Done."

echo removing old logs
rm -f ${LOGDIR}/1.txt
rm -f ${LOGDIR}/2.txt
rm -f ${LOGDIR}/3.txt
rm -f ${LOGDIR}/4.txt

echo removing old output
rm -rf ${STOREDIR}/node
rm -f ${STOREDIR}/*

tcheck="--free-is-write=yes --tool=drd --check-stack-var=yes --trace-cond=yes --trace-fork-join=yes --trace-mutex=yes --log-file=drd.agg.log.3"
mcheck="--track-origins=yes --leak-check=full --log-file=vg.agg.log.3"
pf=${LOGDIR}/pid
echo Starting daemons
ldms-aggd -x sock:$port4 -S $SOCKDIR/metric_socket_4  -l ${LOGDIR}/4.txt -q DEBUG -r $pf.4 -A
#valgrind -v $tcheck ldms-aggd -x sock:$port4 -S $SOCKDIR/metric_socket_4  -l ${LOGDIR}/4.txt -q DEBUG -r $pf.4 -A

ldmsd -x sock:$port1 -S $SOCKDIR/metric_socket_1  -l ${LOGDIR}/1.txt -q DEBUG -r $pf.1
ldmsd -x sock:$port2 -S $SOCKDIR/metric_socket_2  -l ${LOGDIR}/2.txt -q DEBUG -r $pf.2
ldmsd -x sock:$port3 -S $SOCKDIR/metric_socket_3  -l ${LOGDIR}/3.txt -q DEBUG -r $pf.3
mysleep 3
for i in 1 2 3; do
	echo Starting plugins on daemon$i
	echo 1000$i > $SLURMFILE.$i
	echo "load name=slurmjobid" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "config name=slurmjobid set=localhost$i/slurmjobid component_id=$i file=$SLURMFILE.$i colname=$SLURMCOL" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "start name=slurmjobid interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "load name=meminfo" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "config name=meminfo set=localhost$i/meminfo component_id=$i with_jobid=1" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "start name=meminfo interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "load name=procdiskstats" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "config name=procdiskstats set=localhost$i/procdiskstats component_id=$i with_jobid=1" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "start name=procdiskstats interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "load name=procstatutil2" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "config name=procstatutil2 set=localhost$i/procstatutil2 with_jobid=1 component_id=$i" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "start name=procstatutil2 interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
done
mysleep 2

for i in 1 2 3; do
	echo Adding host$i to aggregator4
	echo "add host=localhost type=active xprt=sock interval=1000000 port=$porttop$i sets=localhost$i/slurmjobid,localhost$i/meminfo,localhost$i/procdiskstats,localhost$i/procstatutil2" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_4
	mysleep 1
done

mysleep 5
for i in 4; do
mkdir -p $STOREDIR
echo Adding store_job to aggregator$i
echo "load name=store_job" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
mysleep 2
spoolopts="spooler=$SPOOLER spooldir=$SPOOLDIR openhook=$OPENHOOK"
echo "config name=store_job path=${STOREDIR} altheader=1 id_pos=1 sequence=forward deadcheck=3 maxidle=3 $spoolopts caldate=true" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
echo "store name=store_job comp_type=node set=slurmjobid container=slurmjobid" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
echo "store name=store_job comp_type=node set=meminfo container=meminfo" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
echo "store name=store_job comp_type=node set=procdiskstats container=procdiskstats" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
echo "store name=store_job comp_type=node set=procstatutil2 container=procstatutil2" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
mysleep 2
done
#
echo ldms_ls on host 3:
ldms_ls -h localhost -x sock -p $port4

mysleep 6
echo `date` starting root jobs
echo rescheduling jobs
for i in 1 2 ; do
	echo 0 > $SLURMFILE.$i
done
	mysleep 8
echo `date` starting 10000 jobs
for i in 1 2 ; do
	echo 1000$i > $SLURMFILE.$i
done
mysleep 8
echo `date` killing samplers
pkill ldmsd

echo `date` starting samplers

ldmsd -x sock:$port1 -S $SOCKDIR/metric_socket_1  -l ${LOGDIR}/1.txt -q DEBUG -r $pf.1
ldmsd -x sock:$port2 -S $SOCKDIR/metric_socket_2  -l ${LOGDIR}/2.txt -q DEBUG -r $pf.2
ldmsd -x sock:$port3 -S $SOCKDIR/metric_socket_3  -l ${LOGDIR}/3.txt -q DEBUG -r $pf.3
mysleep 3
echo `date` starting plugins
for i in 1 2 3; do
	echo Starting plugins on daemon$i
	echo 1000$i > $SLURMFILE.$i
	echo "load name=slurmjobid" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "config name=slurmjobid set=localhost$i/slurmjobid component_id=$i file=$SLURMFILE.$i colname=$SLURMCOL" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "start name=slurmjobid interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "load name=meminfo" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "config name=meminfo set=localhost$i/meminfo component_id=$i with_jobid=1" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "start name=meminfo interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "load name=procdiskstats" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "config name=procdiskstats set=localhost$i/procdiskstats component_id=$i with_jobid=1" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "start name=procdiskstats interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "load name=procstatutil2" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "config name=procstatutil2 set=localhost$i/procstatutil2 component_id=$i with_jobid=1" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
	echo "start name=procstatutil2 interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_$i
done

echo `date` setting root job, then 10000 jobs


for i in 1 2 3; do
	echo 0 > $SLURMFILE.$i
	mysleep 2
	echo 1000$i > $SLURMFILE.$i
done
mysleep 6
echo `date` setting root job, then 50000 jobs
for i in 1 2; do
	echo 0 > $SLURMFILE.$i
	mysleep 2
	echo 5200$i > $SLURMFILE.$i
done
for i in 3; do
	echo 0 > $SLURMFILE.$i
	mysleep 2
	echo 5300$i > $SLURMFILE.$i
done
mysleep 8
echo `date` stopping samplers
pkill ldmsd
#echo "config name=store_job close=all" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
#echo "config name=store_job close=all" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_4
mysleep 10
echo `date` stopping agg
pkill ldms-aggd

mysleep 2
kill -SIGTERM `cat $pf.4`

echo done;
