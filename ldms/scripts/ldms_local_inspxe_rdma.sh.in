#!/bin/bash


# NOTE: replace the two vars below with your paths
# NOTE: change ports, intervals if you like
DESTDIR=
allowroot=0
BUILDDIR=@prefix@
# Manually redefine portbase to avoid collisions.
# Base should be above the maximum in :
#  cat /proc/sys/net/ipv4/ip_local_port_range
# and below 65530 or below the minimum and above 1024
portbase=61100
port1=`expr $portbase + 1`
port2=`expr $portbase + 2`
port3=`expr $portbase + 3`
if test ! -x $BUILDDIR/sbin/ldmsd; then
	echo "can't find ldmsd binary. set destdir in $0 before testing?"
	exit 1
fi
case "x$USER" in
	x)
	echo "must be run in user environment. USER not set"
	exit 1
	;;
	xroot)
	echo "must be run in user environment. root detected."
	echo "killing other folks ldmsd might be a bad idea"
	echo "change allowroot in $0 to override this check."
	exit 1
	;;
esac

# use our pid in dirname to prevent collisions in dir & file naming
TESTDIR=/tmp/$USER/ldmstest/$$
STOREDIR=$TESTDIR/store
SOCKDIR=$TESTDIR/run/ldmsd
LOGDIR=$TESTDIR/logs
export LDMSD_SOCKPATH=${TESTDIR}/run
mkdir -p $STOREDIR $SOCKDIR $LOGDIR $LDMSD_SOCKPATH
echo "logs and data stored under $TESTDIR"
ILIB=/projects/global/x86_64/compilers/intel/intel-compxe-2013_sp1.3.174/composer_xe_2013_sp1.3.174/tbb/lib/intel64/gcc4.4:/opt/openmpi-1.6-intel/lib:/projects/tlcc2/x86_64/libraries/vtune/vtune_amplifier_xe_2013u13/lib64:/projects/global/x86_64/compilers/intel/intel-compxe-2013_sp1.3.174/lib/intel64
export LD_LIBRARY_PATH=$ILIB:${BUILDDIR}/lib:@libeventpath@:$LD_LIBRARY_PATH
export LDMS_XPRT_LIBPATH=${BUILDDIR}/lib
export PATH=${BUILDDIR}/sbin:$PATH
export LDMSD_PLUGIN_LIBPATH=${BUILDDIR}/lib

# whack the daemons we own
pkill ldmsd
sleep 1
echo "Listing ldmsd's still running:"
pgrep ldmsd
echo "Done."

echo removing old logs
rm -f ${LOGDIR}/1.txt
rm -f ${LOGDIR}/2.txt
rm -f ${LOGDIR}/3.txt
rm -f vg.*.log

echo removing old output
rm -rf ${STOREDIR}/node
rm -f ${STOREDIR}/*

XPRT=sock
XPRT=rdma
LSXPRT=sock
IARGS="-collect ti-3 -module-filter-mode=include -appdebug=off"

LSVG1="inspxe-cl $IARGS -result-dir xesheep_ls --"
AGGLSVG1="inspxe-cl $IARGS -result-dir xeagg_ls_l --"
AGGLSVG2="inspxe-cl $IARGS -result-dir xeagg_ls --"
AGGVG="inspxe-cl $IARGS -result-dir xeagg --"
SHPVG="inspxe-cl $IARGS -result-dir xesheepd --"
if test -z "$AGGVG"; then
	AGGFG=""
else
	AGGFG="-F"
fi
echo Starting daemons
$SHPVG ldmsd -x ${XPRT}:$port1 -S $SOCKDIR/metric_socket_1 -l ${LOGDIR}/1.txt
ldmsd -x ${XPRT}:$port2 -S $SOCKDIR/metric_socket_2  -l ${LOGDIR}/2.txt
$AGGVG  ldmsd  $AGGFG -x ${LSXPRT}:$port3 -S $SOCKDIR/metric_socket_3  -l ${LOGDIR}/3.txt &
sleep 7

localhost=chama-lsm1-ib0 ;# must be set based on local machine
lslocalhost=localhost

echo Starting plugins on daemon1
echo "load name=meminfo" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
echo "config name=meminfo set=localhost1/meminfo component_id=1" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
echo "start name=meminfo interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
echo "load name=vmstat" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
echo "config name=vmstat set=localhost1/vmstat component_id=1" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
echo "start name=vmstat interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_1
sleep 1
sleep 1

echo Starting plugins on daemon2
echo "load name=meminfo" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_2
echo "config name=meminfo set=localhost2/meminfo component_id=2" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_2
echo "start name=meminfo interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_2
echo "load name=vmstat" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_2
echo "config name=vmstat set=localhost2/vmstat component_id=2" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_2
echo "start name=vmstat interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_2
sleep 2

echo Starting plugins on daemon3
echo "load name=meminfo" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
sleep 5
echo "config name=meminfo set=localhost3/meminfo component_id=3" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
echo "start name=meminfo interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
echo "load name=vmstat" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
sleep 5
echo "config name=vmstat set=localhost3/vmstat component_id=3" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
echo "start name=vmstat interval=1000000" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
sleep 2

echo Adding host2 to aggregator3
echo "add host=$localhost type=active xprt=$XPRT interval=1000000 port=$port2 sets=localhost2/meminfo,localhost2/vmstat" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
sleep 1
echo Adding host1 to aggregator3
echo "add host=$localhost type=active xprt=$XPRT interval=1000000 port=$port1 sets=localhost1/meminfo,localhost1/vmstat" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3

sleep 5
echo Adding store_csv to aggregator3
echo "load name=store_csv" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
sleep 5
sleep 2
echo "config name=store_csv path=${STOREDIR} altheader=0" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
echo "store name=store_csv comp_type=node set=meminfo container=meminfo" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
echo "store name=store_csv comp_type=node set=vmstat container=vmstat" | ${BUILDDIR}/sbin/ldmsctl -S $SOCKDIR/metric_socket_3
sleep 2
#

sleep 5
echo ldms_ls on host 1:
$LSVG1 ldms_ls -h $localhost -x $XPRT -p $port1 -l &
ldms_ls -h $localhost -x $XPRT -p $port1 -l &
sleep 10
echo ldms_ls on host 2:
ldms_ls -h $localhost -x $XPRT -p $port2 -l
sleep 1
echo ldms_ls on host 3:
$AGGLSVG1 ldms_ls -h $lslocalhost -x $LSXPRT -p $port3  -l
sleep 2
$AGGLSVG2 ldms_ls -h $lslocalhost -x $LSXPRT -p $port3

echo done. be patient;
sleep 3
echo cooking thread reports:
pkill ldmsd
sleep 5
report="-report problems -report-all"
inspxe-cl $report -result-dir xesheep_ls -report-output xesheep_ls.txt
inspxe-cl $report -result-dir xeagg_ls -report-output xeagg_ls.txt
inspxe-cl $report -result-dir xeagg_ls_l -report-output xeagg_ls_l.txt
inspxe-cl $report -result-dir xeagg -report-output xeagg.txt
inspxe-cl $report -result-dir xesheepd -report-output xesheepd.txt
