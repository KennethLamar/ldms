.\" Manpage for Plugin_cray_system_sampler
.\" Contact ovis-help@ca.sandia.gov to correct errors or typos.
.TH man 7 "11 Sep 2014" "1.2" "LDMS Plugin cray_system_sampler man page"

.SH NAME
Plugin_cray_system_sampler - man page for the LDMS cray_system_sampler plugin

.SH SYNOPSIS
Within ldmsctl
.br
ldmsctl> config name=cray_system_sampler [ <attr> = <value> ]

.SH DESCRIPTION
With LDMS (Lightweight Distributed Metric Service), plugins for the ldmsd (ldms daemon) are configured via ldmsctl.
The cray_system_sampler plugin provides data from a variety of sources on the XE/XK systems.
The cray_system_sampler is
.I
not
for XC systems.
.PP
If you have built with
.B --enable-gpcdr
then the cray_system_sampler will be named cray_system_sampler_r; if you have built with
.B --enable-gpcd
then the cray_system_sampler will be named cray_system_sampler_d.

.SH ENVIRONMENT
If you have built with
.B --enable_cray_nvidia
and intend to collect data for gpu devices, then the following environment variable must be set:
.TP
LDMSD_CRAY_NVIDIA_PLUGIN_LIBPATH
Path to libnvidia-ml.so library

.SH LDMSCTL CONFIGURATION ATTRIBUTE SYNTAX

.TP
.BR config
name=<plugin_name> component_id=<comp_id> set=<set_name> gemini_metrics_type=<mtype> llite=<llite> rtrfile=<rtrfile> gpu_devices=<gpulist>
.br
ldmsctl configuration line
.RS
.TP
name=<plugin_name>
.br
This MUST be cray_system_sampler.
.TP
component_id=<comp_id>
.br
The component id numerical value.
.TP
set=<set_name>
.br
The name of the metric set.
.TP
gemini_metrics_type=<mtype>
.br
Gemini metrics type identifier - Values are 0,1,2. 0 = counter data only, 1 = derived data (for certain HSN values), 2 = both.
Default is counter data only.
.TP
llite=<llite>
.br
CSV separated ost list. Non-existent values will be populated with 0's
.TP
rtrfile=<rtrfile>
.br
parsed rtr file with media type and link information.
.TP
gpu_devices=<gpulist>
.br
CSV separated gpu device names list. Non-existent values will be populated with 0's.
.RE


.SH GPU INFORMATION
GPU information is gotten from the libnvidia-ml.so. You will need to specify the GPU device names about which you want to collect data. An empty device list will not attempt to collect for any devices.

In order to enable the ability to collect GPU information, then build with:
.B --enable_cray_nvidia
and with
.B --with-cray-nvidia-inc
set to the path to nvml.h.

Further, the configuration variable
.B gpu_devices
will determine whether gpu information will be collected. If you specify devices, then also specify the path to libnvidia_ml.so via the environment variable
.B LDMSD_CRAY_NVIDIA_PLUGIN_LIBPATH
as described above. If you do not specify devices, then collection will not be attempted and neither the environment variable nor the library need exist.


.SH LUSTRE INFORMATION
Lustre information can be gotten from /proc/fs/lustre/llite:

.nf
sh-3.2# ls /proc/fs/lustre/llite/
lustrefs-ffff88081d38f800  snx11024-ffff88041f1aec00
.if
You will need to specify the Lustre mount points about which you want to collect data (e.g. "lustrefs,snx11024" in this case).

.SH INTERCONNECT INFORMATION
The interconnect information is produced in two steps:
.TP
1) From the smw as root:
.RS
    rtr --interconnect >> interconnect.txt
.RE
This produces a list of all the tile, link, and media information
.PP
NOTE: This will be used for the calculation of derived metrics for both the gpcd and gpcdr interfaces since it is the only way to get the media information to estimate max BW.
.PP
NOTE: the gemini_metrics_type flag in the sampler configuration controls whether counter-only, derived-only, or both types of metrics will be output to the set. If you use gemini_metrics_type=0 (counter-only) then the interconnect file is not required to be specified in the configuration line.

.TP
2) On some host:
.RS
   parse_rtr_dump interconnect.txt >> parsed_interconnect.txt
.RE
This produces a formatted version of the interconnect.txt file which is greatly reduced in size.
Using the even/oddness of the component numbers and the slot id at one end of the chassis or the other the direction and the
cable/backplane connection information can be derived. This code produces that look-up information (~31k for a fully connected 3-D torus)
as opposed to the raw data which grows with the system size.

.SH GEMINI PERFORMANCE COUNTER INFORMATION
The gemini performance counter information will be accessed and aggregated by link direction in one of two ways:
.TP
a) If your system has the Oct 2013 Cray release CLE 4.2 UP02 or later that provides access to this information via the gpcdr module, then you can use that source.
.B NOTE: This sampler currently supports only a specific grcdr-init.config which specifies certain variables, sample expiration time, and time units. The configuration file and instructions for using it can be found in util/gemini.
.br
OR
.TP
b) if it does not, then this information can be calculated from the raw performance counters via the gpcd interface. In this case, you will need the gpcd libraries.
.PP
NOTE: gpcd is a Cray library. You can use a system installation of the gpcd library and header files if they are available, which they most likely will be. If you need gpcd, please write to your Cray contact.
.PP
The only difference in output information in the two cases is that currently the gpcd source also outputs aggregate host-facing-tile info in addition to the other metrics (see ldms_ls output below) If you have built with
.B --enable-gpcdr
then the cray_system_sampler will be named cray_system_sampler_r; if you have built with
.B --enable-gpcd
then the cray_system_sampler will be named cray_system_sampler_d.

.SH NOTES
In some future LDMS release, the gpcd interface will be deprecated as more systems move to CLE releases supporting gpcdr.

.SH EXAMPLES
.PP
.nf
$/projects/ldms/Build/ldms.usr/sbin/ldmsctl -S /var/run/ldmsd/metric_socket
ldmsctl> load name=cray_system_sampler_r
ldmsctl> config name=cray_system_sampler_r component_id=1 set=nid0001/cray_system_sampler_r rtrfile=/projects/ldms/parsed_interconnect.txt llite="snx11001" gemini_metrics_type=2
ldmsctl> start name=cray_system_sampler_r interval=1000000
ldmsctl> quit
.fi
.PP
.nf
$ldms_ls -h nid00001 -x ugni -p 60020 -l
nid00002/cray_system_sampler_r: consistent, last update: Wed Nov 27 11:35:21 2013 [3694us]
U64 0                nettopo_mesh_coord_X
U64 0                nettopo_mesh_coord_Y
U64 1                nettopo_mesh_coord_Z
U64 511796170434     X+_traffic (B)
U64 0                X-_traffic (B)
U64 3303792579630    Y+_traffic (B)
U64 0                Y-_traffic (B)
U64 3465635261280    Z+_traffic (B)
U64 440005690365     Z-_traffic (B)
U64 11550455465      X+_packets (1)
U64 0                X-_packets (1)
U64 69565153178      Y+_packets (1)
U64 0                Y-_packets (1)
U64 77814592569      Z+_packets (1)
U64 11016585172      Z-_packets (1)
U64 279915898696     X+_inq_stall (ns)
U64 0                X-_inq_stall (ns)
U64 1166528050735    Y+_inq_stall (ns)
U64 0                Y-_inq_stall (ns)
U64 1388142391120    Z+_inq_stall (ns)
U64 178629273450     Z-_inq_stall (ns)
U64 53317089003      X+_credit_stall (ns)
U64 0                X-_credit_stall (ns)
U64 1113615361307    Y+_credit_stall (ns)
U64 0                Y-_credit_stall (ns)
U64 378939358726     Z+_credit_stall (ns)
U64 317184207        Z-_credit_stall (ns)
U64 48               X+_sendlinkstatus (1)
U64 0                X-_sendlinkstatus (1)
U64 24               Y+_sendlinkstatus (1)
U64 0                Y-_sendlinkstatus (1)
U64 24               Z+_sendlinkstatus (1)
U64 24               Z-_sendlinkstatus (1)
U64 48               X+_recvlinkstatus (1)
U64 0                X-_recvlinkstatus (1)
U64 24               Y+_recvlinkstatus (1)
U64 0                Y-_recvlinkstatus (1)
U64 24               Z+_recvlinkstatus (1)
U64 24               Z-_recvlinkstatus (1)
U64 2112             X+_SAMPLE_GEMINI_LINK_BW (B/s)
U64 0                X-_SAMPLE_GEMINI_LINK_BW (B/s)
U64 867              Y+_SAMPLE_GEMINI_LINK_BW (B/s)
U64 0                Y-_SAMPLE_GEMINI_LINK_BW (B/s)
U64 180              Z+_SAMPLE_GEMINI_LINK_BW (B/s)
U64 2805             Z-_SAMPLE_GEMINI_LINK_BW (B/s)
U64 22               X+_SAMPLE_GEMINI_LINK_USED_BW (% x10e6)
U64 0                X-_SAMPLE_GEMINI_LINK_USED_BW (% x10e6)
U64 9                Y+_SAMPLE_GEMINI_LINK_USED_BW (% x10e6)
U64 0                Y-_SAMPLE_GEMINI_LINK_USED_BW (% x10e6)
U64 1                Z+_SAMPLE_GEMINI_LINK_USED_BW (% x10e6)
U64 18               Z-_SAMPLE_GEMINI_LINK_USED_BW (% x10e6)
U64 24               X+_SAMPLE_GEMINI_LINK_PACKETSIZE_AVE (B)
U64 0                X-_SAMPLE_GEMINI_LINK_PACKETSIZE_AVE (B)
U64 18               Y+_SAMPLE_GEMINI_LINK_PACKETSIZE_AVE (B)
U64 0                Y-_SAMPLE_GEMINI_LINK_PACKETSIZE_AVE (B)
U64 9                Z+_SAMPLE_GEMINI_LINK_PACKETSIZE_AVE (B)
U64 37               Z-_SAMPLE_GEMINI_LINK_PACKETSIZE_AVE (B)
U64 0                X+_SAMPLE_GEMINI_LINK_INQ_STALL (% x10e6)
U64 0                X-_SAMPLE_GEMINI_LINK_INQ_STALL (% x10e6)
U64 0                Y+_SAMPLE_GEMINI_LINK_INQ_STALL (% x10e6)
U64 0                Y-_SAMPLE_GEMINI_LINK_INQ_STALL (% x10e6)
U64 0                Z+_SAMPLE_GEMINI_LINK_INQ_STALL (% x10e6)
U64 0                Z-_SAMPLE_GEMINI_LINK_INQ_STALL (% x10e6)
U64 0                X+_SAMPLE_GEMINI_LINK_CREDIT_STALL (% x10e6)
U64 0                X-_SAMPLE_GEMINI_LINK_CREDIT_STALL (% x10e6)
U64 0                Y+_SAMPLE_GEMINI_LINK_CREDIT_STALL (% x10e6)
U64 0                Y-_SAMPLE_GEMINI_LINK_CREDIT_STALL (% x10e6)
U64 0                Z+_SAMPLE_GEMINI_LINK_CREDIT_STALL (% x10e6)
U64 0                Z-_SAMPLE_GEMINI_LINK_CREDIT_STALL (% x10e6)
U64 4295117269008    totaloutput_optA
U64 3403679290176    totalinput
U64 782052680944     fmaout
U64 693055825776     bteout_optA
U64 47578643456      bteout_optB
U64 3650200400448    totaloutput_optB
U64 1344             SAMPLE_totaloutput_optA (B/s)
U64 0                SAMPLE_totalinput (B/s)
U64 0                SAMPLE_fmaout (B/s)
U64 0                SAMPLE_bteout_optA (B/s)
U64 0                SAMPLE_bteout_optB (B/s)
U64 1344             SAMPLE_totaloutput_optB (B/s)
U64 455385           lustrefs.stats.dirty_pages_hits
U64 1535982          lustrefs.stats.dirty_pages_misses
U64 0                lustrefs.stats.writeback_from_writepage
U64 0                lustrefs.stats.writeback_from_pressure
U64 0                lustrefs.stats.writeback_ok_pages
U64 0                lustrefs.stats.writeback_failed_pages
U64 3214118560       lustrefs.stats.read_bytes
U64 6188335392       lustrefs.stats.write_bytes
U64 40960            lustrefs.stats.brw_read
U64 0                lustrefs.stats.brw_write
U64 0                lustrefs.stats.ioctl
U64 56489            lustrefs.stats.open
U64 56489            lustrefs.stats.close
U64 0                lustrefs.stats.mmap
U64 6328             lustrefs.stats.seek
U64 1                lustrefs.stats.fsync
U64 95               lustrefs.stats.setattr
U64 95               lustrefs.stats.truncate
U64 0                lustrefs.stats.lockless_truncate
U64 0                lustrefs.stats.flock
U64 443              lustrefs.stats.getattr
U64 2                lustrefs.stats.statfs
U64 4909             lustrefs.stats.alloc_inode
U64 0                lustrefs.stats.setxattr
U64 0                lustrefs.stats.getxattr
U64 0                lustrefs.stats.listxattr
U64 0                lustrefs.stats.removexattr
U64 216060           lustrefs.stats.inode_permission
U64 0                lustrefs.stats.direct_read
U64 0                lustrefs.stats.direct_write
U64 0                lustrefs.stats.lockless_read_bytes
U64 0                lustrefs.stats.lockless_write_bytes
U64 0                snx11024.stats.dirty_pages_hits
U64 1                snx11024.stats.dirty_pages_misses
U64 0                snx11024.stats.writeback_from_writepage
U64 0                snx11024.stats.writeback_from_pressure
U64 0                snx11024.stats.writeback_ok_pages
U64 0                snx11024.stats.writeback_failed_pages
U64 612162576        snx11024.stats.read_bytes
U64 96               snx11024.stats.write_bytes
U64 0                snx11024.stats.brw_read
U64 0                snx11024.stats.brw_write
U64 0                snx11024.stats.ioctl
U64 21921            snx11024.stats.open
U64 21921            snx11024.stats.close
U64 0                snx11024.stats.mmap
U64 1216             snx11024.stats.seek
U64 1                snx11024.stats.fsync
U64 15               snx11024.stats.setattr
U64 15               snx11024.stats.truncate
U64 0                snx11024.stats.lockless_truncate
U64 0                snx11024.stats.flock
U64 3                snx11024.stats.getattr
U64 2                snx11024.stats.statfs
U64 2359             snx11024.stats.alloc_inode
U64 0                snx11024.stats.setxattr
U64 0                snx11024.stats.getxattr
U64 0                snx11024.stats.listxattr
U64 0                snx11024.stats.removexattr
U64 107967           snx11024.stats.inode_permission
U64 0                snx11024.stats.direct_read
U64 0                snx11024.stats.direct_write
U64 0                snx11024.stats.lockless_read_bytes
U64 0                snx11024.stats.lockless_write_bytes
U64 0                nr_dirty
U64 0                nr_writeback
U64 224              loadavg_latest(x100)
U64 207              loadavg_5min(x100)
U64 2                loadavg_running_processes
U64 182              loadavg_total_processes
U64 32294648         current_freemem
U64 1267352565       ipogif0_rx_bytes
U64 28155323         ipogif0_tx_bytes
U64 1364774          SMSG_ntx
U64 354553746        SMSG_tx_bytes
U64 1367371          SMSG_nrx
U64 298329388        SMSG_rx_bytes
U64 30962            RDMA_ntx
U64 6239550053       RDMA_tx_bytes
U64 6522             RDMA_nrx
U64 507905281        RDMA_rx_bytes
.fi


.SH SEE ALSO
LDMS_Authentication(7), LDMS_QuickStart(7),
ldmsctl(1), ldmsd(1), ldms_ls(1),
Plugin_kgnilnd(7), Plugin_lustre2_client(7), Plugin_meminfo(7), Plugin_procnetdev(7), Plugin_procnfs(7),
Plugin_procsensors(7), Plugin_store_csv(7), Plugin_store_derived_csv(7), Plugin_sysclassib(7), Plugin_procstatutil(7), Plugin_vmstat(7)

.SH BUGS
No known bugs.

